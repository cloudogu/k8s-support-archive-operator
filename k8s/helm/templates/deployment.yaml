apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels: {{ include "helm.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/name: k8s-support-archive-operator
      control-plane: controller-manager
  template:
    metadata:
      labels: {{ include "helm.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/name: k8s-support-archive-operator
        control-plane: controller-manager
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: archive-webserver
        image: "{{ .Values.webserver.image.registry }}/{{ .Values.webserver.image.repository }}:{{ .Values.webserver.image.tag }}"
        imagePullPolicy: {{ .Values.webserver.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 60
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources: {{ toYaml .Values.webserver.resources | nindent 10 }}
        securityContext: {{ toYaml .Values.webserver.containerSecurityContext | nindent 10 }}
        volumeMounts:
          - mountPath: /usr/share/nginx/html
            name: archive-storage
            readOnly: true
            subPath: support-archives
      - args: {{ toYaml .Values.controllerManager.manager.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        - name: STAGE
          value: {{ quote .Values.controllerManager.env.stage | default "production" }}
        - name: LOG_LEVEL
          value: {{ quote .Values.controllerManager.env.logLevel | default "info" }}
        - name: ARCHIVE_VOLUME_DOWNLOAD_SERVICE_NAME
          value: {{ printf "%s-webserver" (include "helm.fullname" .) | quote }}
        - name: ARCHIVE_VOLUME_DOWNLOAD_SERVICE_PROTOCOL
          value: {{ quote .Values.webserver.env.downloadService.protocol | default "http" }}
        - name: ARCHIVE_VOLUME_DOWNLOAD_SERVICE_PORT
          value: {{ quote .Values.webserver.env.downloadService.port | default "8080" }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: "{{ .Values.controllerManager.manager.image.registry }}/{{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.controllerManager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
          - mountPath: /data
            name: archive-storage
        imagePullPolicy: {{ .Values.controllerManager.imagePullPolicy }}
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "helm.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: archive-storage
          persistentVolumeClaim:
            claimName: {{ include "helm.fullname" . }}-storage


