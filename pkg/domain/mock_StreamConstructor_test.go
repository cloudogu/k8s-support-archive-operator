// Code generated by mockery v2.53.3. DO NOT EDIT.

package domain

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockStreamConstructor is an autogenerated mock type for the StreamConstructor type
type MockStreamConstructor struct {
	mock.Mock
}

type MockStreamConstructor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockStreamConstructor) EXPECT() *MockStreamConstructor_Expecter {
	return &MockStreamConstructor_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with no fields
func (_m *MockStreamConstructor) Execute() (io.Reader, CloseStreamFunc, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 io.Reader
	var r1 CloseStreamFunc
	var r2 error
	if rf, ok := ret.Get(0).(func() (io.Reader, CloseStreamFunc, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	if rf, ok := ret.Get(1).(func() CloseStreamFunc); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(CloseStreamFunc)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockStreamConstructor_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockStreamConstructor_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *MockStreamConstructor_Expecter) Execute() *MockStreamConstructor_Execute_Call {
	return &MockStreamConstructor_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *MockStreamConstructor_Execute_Call) Run(run func()) *MockStreamConstructor_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockStreamConstructor_Execute_Call) Return(_a0 io.Reader, _a1 CloseStreamFunc, _a2 error) *MockStreamConstructor_Execute_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockStreamConstructor_Execute_Call) RunAndReturn(run func() (io.Reader, CloseStreamFunc, error)) *MockStreamConstructor_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockStreamConstructor creates a new instance of MockStreamConstructor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockStreamConstructor(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockStreamConstructor {
	mock := &MockStreamConstructor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
