// Code generated by mockery v2.53.3. DO NOT EDIT.

package usecase

import (
	v1 "github.com/cloudogu/k8s-support-archive-lib/client/v1"
	mock "github.com/stretchr/testify/mock"
)

// mockSupportArchiveV1Interface is an autogenerated mock type for the supportArchiveV1Interface type
type mockSupportArchiveV1Interface struct {
	mock.Mock
}

type mockSupportArchiveV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *mockSupportArchiveV1Interface) EXPECT() *mockSupportArchiveV1Interface_Expecter {
	return &mockSupportArchiveV1Interface_Expecter{mock: &_m.Mock}
}

// SupportArchives provides a mock function with given fields: namespace
func (_m *mockSupportArchiveV1Interface) SupportArchives(namespace string) v1.SupportArchiveInterface {
	ret := _m.Called(namespace)

	if len(ret) == 0 {
		panic("no return value specified for SupportArchives")
	}

	var r0 v1.SupportArchiveInterface
	if rf, ok := ret.Get(0).(func(string) v1.SupportArchiveInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1.SupportArchiveInterface)
		}
	}

	return r0
}

// mockSupportArchiveV1Interface_SupportArchives_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SupportArchives'
type mockSupportArchiveV1Interface_SupportArchives_Call struct {
	*mock.Call
}

// SupportArchives is a helper method to define mock.On call
//   - namespace string
func (_e *mockSupportArchiveV1Interface_Expecter) SupportArchives(namespace interface{}) *mockSupportArchiveV1Interface_SupportArchives_Call {
	return &mockSupportArchiveV1Interface_SupportArchives_Call{Call: _e.mock.On("SupportArchives", namespace)}
}

func (_c *mockSupportArchiveV1Interface_SupportArchives_Call) Run(run func(namespace string)) *mockSupportArchiveV1Interface_SupportArchives_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *mockSupportArchiveV1Interface_SupportArchives_Call) Return(_a0 v1.SupportArchiveInterface) *mockSupportArchiveV1Interface_SupportArchives_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockSupportArchiveV1Interface_SupportArchives_Call) RunAndReturn(run func(string) v1.SupportArchiveInterface) *mockSupportArchiveV1Interface_SupportArchives_Call {
	_c.Call.Return(run)
	return _c
}

// newMockSupportArchiveV1Interface creates a new instance of mockSupportArchiveV1Interface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockSupportArchiveV1Interface(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockSupportArchiveV1Interface {
	mock := &mockSupportArchiveV1Interface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
